class Solution {
public:
    bool search(int A[], int n, int target) 
    {
        return find(A,0,n-1,target);
    }
    
    bool find(int A[],int start,int end,int target)
    {
        if(start>end)
          return false;
          
        int mid = (start+end)/2;
        
        if(A[mid]==target)
         return true;
         
        if(A[mid]==A[start])
          return find(A,start+1,end,target);
         
        if(A[mid]>A[start])  // left part is sorted
        {
            if(A[start]<=target&&target<A[mid])
              return find(A,start,mid-1,target);
            else
              return find(A,mid+1,end,target);
        }
        
        else  // right part is sorted
        {
            if(A[mid+1]<=target&&target<=A[end])
              return find(A,mid+1,end,target);
            else
              return find(A,start,mid-1,target);
        }
        
    }
    
};
