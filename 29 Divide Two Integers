class Solution {
public:
    int divide(int dividend, int divisor) 
    {
        
        bool pos = true;
        
        unsigned long long d = abs((long long )dividend);
        unsigned long long s = abs((long long )divisor) ;
        unsigned long long originaldivisor = s;

        
        if((long long )dividend < 0 ){ pos = !pos; }
        if((long long )divisor < 0 )  { pos = !pos;}
        
        unsigned long long res = 0;
        
        unsigned long  digit =1;
        
        
        while(s<=d)
        {
            s = s<<1;
            digit = digit<<1;
        }
        
        while(d>=originaldivisor)
        {
            while(d>=s)
            {
                d = d - s;
                res = res + digit;
            }
            
            s = s>>1;
            digit = digit>>1;
        }
        
        if(pos)
        {
          if(res>INT_MAX) 
            return INT_MAX;
          else
           return res;
        }
        else
        {
          if(res>INT_MAX+1)
            return INT_MIN;
          else
            return -1*res;
        }
       
        
    }
};
